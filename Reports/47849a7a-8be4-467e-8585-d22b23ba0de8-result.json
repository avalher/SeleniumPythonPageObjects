{"name": "test_printcarnameandprice[firefox-BMW-BMW Cars 3]", "status": "failed", "statusDetails": {"message": "AssertionError: Not on the correct page as title is not matching\nassert 'BMW Cars' == 'BMW Cars 3'\n  - BMW Cars 3\n  ?         --\n  + BMW Cars", "trace": "self = <TestCases.test_carwale.Test_CarWale object at 0x000001FF4B5D5E10>\ncarBrand = 'BMW', carTitle = 'BMW Cars 3'\n\n    @pytest.mark.parametrize(\"carBrand, carTitle\", get_data(\"newCarsTest\"))\n    def test_printcarnameandprice(self, carBrand, carTitle):\n        log.logger.info(\"****Inside Car Names and prices******\")\n        home = HomePage(self.driver)\n        car = CarBase(self.driver)\n    \n        if carBrand == \"BMW\":\n            home.gotoNewCars().selectBMW()\n            title = car.getCarTitle()\n            print(\"Car title is: \" + title)\n>           assert title == carTitle, \"Not on the correct page as title is not matching\"\nE           AssertionError: Not on the correct page as title is not matching\nE           assert 'BMW Cars' == 'BMW Cars 3'\nE             - BMW Cars 3\nE             ?         --\nE             + BMW Cars\n\ntest_carwale.py:65: AssertionError"}, "attachments": [{"name": "log", "source": "c3de21bf-ddf7-4752-baa4-5e688b5520bb-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "get_browser", "value": "'firefox'"}, {"name": "carBrand", "value": "'BMW'"}, {"name": "carTitle", "value": "'BMW Cars 3'"}], "start": 1695155693170, "stop": 1695155696484, "uuid": "d9070aa7-d20d-46e9-94ca-04dc0bb43ef3", "historyId": "8613edffe29c3133d6c27e318464ac84", "testCaseId": "9c57a1a69df0b0dfed4b2ee279e8562c", "fullName": "test_carwale.Test_CarWale#test_printcarnameandprice", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('log_on_failure', 'get_browser')"}, {"name": "suite", "value": "test_carwale"}, {"name": "subSuite", "value": "Test_CarWale"}, {"name": "host", "value": "MXLP0854002"}, {"name": "thread", "value": "7848-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_carwale"}]}